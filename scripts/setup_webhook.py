#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞ –≤ Wazzup
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç URL –≤–µ–±—Ö—É–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ Wazzup
"""

import os
import json
import requests
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

class WazzupWebhookSetup:
    """–ö–ª–∞—Å—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–æ–≤ –≤ Wazzup"""
    
    def __init__(self):
        self.api_key = os.getenv('WAZZUP_API_KEY')
        self.api_url = os.getenv('WAZZUP_API_URL', 'https://api.wazzup24.com/v3')
        self.webhook_url = os.getenv('WEBHOOK_URL')
        
        if not self.api_key:
            raise ValueError("WAZZUP_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        
        if not self.webhook_url:
            raise ValueError("WEBHOOK_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    def setup_webhook(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ –≤ Wazzup"""
        try:
            url = f"{self.api_url}/webhooks"
            
            headers = {
                'Authorization': f'Bearer {self.api_key}',
                'Content-Type': 'application/json'
            }
            
            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–µ–±—Ö—É–∫–∞
            webhook_config = {
                "webhooksUrl": self.webhook_url,
                "subscriptions": {
                    "messagesAndStatuses": True,  # –í–µ–±—Ö—É–∫ –æ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
                    "contactsAndDealsCreation": False,  # –í–µ–±—Ö—É–∫ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏ —Å–¥–µ–ª–æ–∫
                    "channelsUpdates": False  # –í–µ–±—Ö—É–∫ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–Ω–∞–ª–∞
                }
            }
            
            print(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ –¥–ª—è URL: {self.webhook_url}")
            print(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {json.dumps(webhook_config, indent=2, ensure_ascii=False)}")
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ PATCH –∑–∞–ø—Ä–æ—Å–∞
            response = requests.patch(url, headers=headers, json=webhook_config)
            
            if response.status_code == 200:
                print("‚úÖ –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
                result = response.json()
                print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {json.dumps(result, indent=2, ensure_ascii=False)}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
                return False
        
        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ–±—Ö—É–∫–∞: {str(e)}")
            return False
    
    def get_webhook_info(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤–µ–±—Ö—É–∫–∞"""
        try:
            url = f"{self.api_url}/webhooks"
            
            headers = {
                'Authorization': f'Bearer {self.api_key}',
                'Content-Type': 'application/json'
            }
            
            response = requests.get(url, headers=headers)
            
            if response.status_code == 200:
                result = response.json()
                print("üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞:")
                print(json.dumps(result, indent=2, ensure_ascii=False))
                return result
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ–±—Ö—É–∫–µ: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
                return None
        
        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ–±—Ö—É–∫–µ: {str(e)}")
            return None
    
    def test_webhook_connection(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API Wazzup"""
        try:
            # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            url = f"{self.api_url}/channels"
            
            headers = {
                'Authorization': f'Bearer {self.api_key}',
                'Content-Type': 'application/json'
            }
            
            response = requests.get(url, headers=headers)
            
            if response.status_code == 200:
                print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API Wazzup —É—Å–ø–µ—à–Ω–æ!")
                channels = response.json()
                print(f"–ù–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {len(channels)}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
                return False
        
        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)}")
            return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ Wazzup-Podio Integration")
    print("=" * 50)
    
    try:
        setup = WazzupWebhookSetup()
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API...")
        if not setup.test_webhook_connection():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API Wazzup. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á.")
            return
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–µ–±—Ö—É–∫–∞...")
        setup.get_webhook_info()
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
        print("\n3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–≤–æ–≥–æ –≤–µ–±—Ö—É–∫–∞...")
        if setup.setup_webhook():
            print("\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"–í–µ–±—Ö—É–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ URL: {setup.webhook_url}")
            print("\n–¢–µ–ø–µ—Ä—å –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä.")
        else:
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–µ–±—Ö—É–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
    
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

if __name__ == "__main__":
    main()
